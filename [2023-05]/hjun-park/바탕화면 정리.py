# 문제 설명
'''
 - 정사각형 (wallpaper)
   - .(빈칸) // #(파일)

 - 최소한의 이동거리 드래그로 모든 파일들을 지우려함
    - S -> E로 드래그 한다. 거리 계산식 (  |rdx - lux| + |rdy - luy| )
 -
wallpaper   result
[".#...", "..#..", "...#."]   [0, 1, 3, 4]
["..........", ".....#....", "......##..", "...##.....", "....#....."]   [1, 3, 5, 8]
[".##...##.", "#..#.#..#", "#...#...#", ".#.....#.", "..#...#..", "...#.#...", "....#...."]   [0, 0, 7, 9]
["..", "#."]   [1, 0, 2, 1]

'''

# 접근방법
'''
1. 모든 리스트를 순회하면서 #의 x와 y의 위치를 xlist와 ylist에 추가 
2. min(xlist)는 lx가 되고 min(ylist)는 ly가 된다. 
3. 각 최댓값에 각각 1을 추가하면 rx, ry
'''


def solution(wallpaper):
    x_list, y_list = [], []

    for x in range(len(wallpaper)):
        for y in range(len(wallpaper[x])):
            if wallpaper[x][y] == '#':
                x_list.append(x)
                y_list.append(y)

    return [min(x_list), min(y_list), max(x_list) + 1, max(y_list) + 1]


print(solution([".#...", "..#..", "...#."]))  # [0, 1, 3, 4]
print(solution(["..........", ".....#....", "......##..", "...##.....", "....#....."]))  # [1, 3, 5, 8]
print(solution(
    [".##...##.", "#..#.#..#", "#...#...#", ".#.....#.", "..#...#..", "...#.#...", "....#...."]))  # [0, 0, 7, 9]
print(solution(["..", "#."]))  # [1, 0, 2, 1]
